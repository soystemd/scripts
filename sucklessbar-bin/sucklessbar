#!/bin/bash
# Koonix 2020-08-23
# This script be responsible for me statusbar.

# Configuration
# Bar update interval
interval=5
# The delimiter character(s) between widgets
delimiter=" ][ "
# The half-delimiter at the end of the bar
enddelimiter=" ]"
# Whatever you want to show up at the beginning of the bar
bar_prefix=" "
# Glyphs/Emojis
glyph_headphone=""
glyph_keyboard=""
glyph_speaker=""
glyph_memory=""
glyph_geoip=""
glyph_temp=""
glyph_time=""



# Construct the statusbar
refresh_widgets_set1() { \

    INDEX=1
    # Time and date widget
    WIDGET[$INDEX]=$(widget_time)

    # Volume widget
    refresh_widgets_set2

    INDEX=4
    # GeoIP widget
    WIDGET[$INDEX]=$(widget_geoip)

    INDEX=5
    # Memory usage widget
    WIDGET[$INDEX]=$(widget_mem)
}

# Construct the statusbar while updating only some of the widgets
refresh_widgets_set2() { \

    INDEX=2
    # Keyboard layout widget
    WIDGET[$INDEX]=$(widget_kb_layout)

    INDEX=3
    # Audio widget
    WIDGET[$INDEX]=$(widget_audio)
}




# Widget that shows time and date.
widget_time() { \

    echo "$(/usr/bin/date -Im | \
        awk -v glyph="$glyph_time" 'BEGIN{FS=OFS="+"} \
        {gsub(/T/, " x ", $1); print glyph " " $1}')"
}


# Widget that shows the current keyboard layout.
widget_kb_layout() { \

    echo "$glyph_keyboard"; echo "$(xkblayout-state print " %s")"; echo
}


# Widget that shows some audio related stuff.
widget_audio() { \

    # Check if audio is playing through headphones or speakers
    currentsink=$(vol-getcurrentsinkname)
    if [ "$currentsink" = "analog-stereo" ]
    then
        sinkicon="$glyph_headphone"
    else
        sinkicon="$glyph_speaker"
    fi

    echo "${sinkicon} "; echo "$(vol-getcurrentvolumeandmute)"
}


# Widget that shows memory usage.
widget_mem() { \

    echo "$(/usr/bin/free -h | \
        awk -v glyph="$glyph_memory" '/^Mem:/ {print glyph " " $3}')"
}


# Widget that shows CPU temp.
widget_cpu() { \

    echo "$(/usr/bin/sensors | \
        awk -v glyph="$glyph_temp" '/^Core 0/ {print glyph $3}' | tr '+' ' ')"
}


# Widget that shows your location based on your public ip.
widget_geoip() { \

    local ip="$(curl -s --retry 1 ifconfig.me || echo "")"

    if [ "$ip" = "" ]; then
        echo "$ip"
    else
        echo "$(geoiplookup "$ip" | \
            awk -v glyph="$glyph_geoip" '/^GeoIP/ {gsub(/,/, "", $4); \
            print glyph " " tolower($4)}')"
    fi
}




# Now for the dirty background detail:
# Stick all the widgets together into a line
build_bar() { \
    local widget_count="${#WIDGET[@]}"
    statusbar=$(for ((i = "$widget_count"; i > 0; i--))
    do
        echo "$delimiter"
        echo "${WIDGET[$i]}"
    done)
}

# Write the bar to dwm via xsetroot
write_bar() { \
    # Remove the first two characters of statusbar (leftover of the delimiter)
    statusbar="${bar_prefix}${statusbar:2}${enddelimiter}"
    xsetroot -name "$(echo "$statusbar" | tr -d '\n')" &
    wait
}

# Refresh and write the constructed statusbar
refresh_bar() { \
    refresh_widgets_set1
    build_bar
    write_bar
}

# Refresh and write the constructed statusbar (but only refresh set2)
refresh_bar_sigtrap() { \
    refresh_widgets_set2
    build_bar
    write_bar
}

# Trap for updating the statusbar at will
trap 'refresh_bar_sigtrap' SIGTRAP

# Refresh the statusbar every 2 seconds
while true ; do
    refresh_bar
    sleep "$interval" &
    wait
done
