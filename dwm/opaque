#!/bin/bash
# Get class name of a program and make all it's instances
# transparent, opaque or toggle it at will.
#
# This script handles my terminal,s transparency.
# See, in some dwm layouts, windows fall on top of eachother, and having an
# Always-Transparent terminal wouldn'd be nice then. so I have dwm to just
# toggle it off in those layouts, and Toggle it back on in tiling layouts.

# Config
opacity_semitrans="0xefffffff"
opacity_opaque="0xffffffff"
opacity_trans="0xddffffff"
tmpfile="$XDG_RUNTIME_DIR/opaque/status"

main() {
    [ "$#" != 2 ] && echo 'error: give 2 args' && exit 1
    winclass="$2"
    case "$1" in
        -0) set_all trans     ;;
        -1) set_all opaque    ;;
        -2) set_all semitrans ;;
        -r) set_all $(get_status) ;;
        -t) toggle ;;
    esac
}

set_all() {
    set_status "$1"
    eval opacity="\$opacity_$1"
    xdotool search --class "$winclass" | while IFS= read -r winid; do
        xprop -id "$winid" -format _NET_WM_WINDOW_OPACITY 32x \
            -set _NET_WM_WINDOW_OPACITY "$opacity"
    done
}

toggle() {
    case "$(get_status)" in
        trans | semitrans) set_all opaque ;;
        opaque           ) set_all trans  ;;
    esac
}

opaque_init() {
    [ -r "$tmpfile" ] && return
    mkdir -p "$(dirname "$tmpfile")"
    echo trans > "$tmpfile"
}

set_status() {
    opaque_init
    echo "$1" > "$tmpfile"
}

get_status() {
    opaque_init
    cat "$tmpfile"
}

main "$@"
exit
