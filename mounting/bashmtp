#!/bin/bash
# My android mtp mounting script, using jmtpfs. so make sure youu install that.
# Because all the other methods suck.
# So ofcourse I had to write my fucking own.

# Config
top_level_mount_dir="$HOME/Mount/MTP"

# Functions
# Delete temp files
cleanup() {
    find -P /tmp -maxdepth 1 -name automtpmount\* -delete > /dev/null 2>&1
}
# Cleanup and exit
cleanup_and_exit() {
    cleanup
    echo; echo "Exiting..."
    exit 0
}
# Cleanup and exit upon receiving SIGINT
trap "cleanup_and_exit" SIGINT


# Check if the user wants to proceed
echo "All MTP devices will now be UnMounted;"
read -p "Press enter to proceed..."

# Intercept ugly abort signals from jmtpfs and do not show them.
trap "" SIGABRT

# Clean all the leftover mtp directory crap from previous runs
echo; echo "Cleaning previous mount points..."
sudo umount "$top_level_mount_dir"/* > /dev/null 2>&1
rmdir "$top_level_mount_dir"/* > /dev/null 2>&1

echo -e "\n    All devices UnMounted successfully."

echo; echo "Now attempting to mount the connected devices."
# Query mtp devices to assert the precense of
# this master device (the linguistics tho lol)
echo "Pinging all available devices..."
jmtpfs > /dev/null 2>&1
jmtpfs -l > /dev/null 2>&1


# Make temp files
devices_info_list=$(mktemp /tmp/automtpmount.XXXXXXXX)
devices_vendor_list=$(mktemp /tmp/automtpmount.XXXXXXXX)
devices_id_list=$(mktemp /tmp/automtpmount.XXXXXXXX)
devices_name_list=$(mktemp /tmp/automtpmount.XXXXXXXX)


# Build some lists of available/detected devices
echo "Building list of devices..."
jmtpfs -l | awk 'f;/Available/ {f=1}' |
    awk '!seen[$0]++'                          > "$devices_info_list"

awk -F ", " '{print $6}'\
    "$devices_info_list"                       > "$devices_vendor_list"

awk '{print $1 substr($2, 1, length($2)-1)}'\
    "$devices_info_list"                       > "$devices_id_list"

jmtpfs -l | awk '/Device/ \
    {print substr($0, index($0, $8))}'         > "$devices_name_list"


# Exit if the list of devices is empty (no device found)
if [ ! -s "$devices_info_list" ]
then
    echo
    echo "    No devices found!"
    echo
    read -p "Press enter to exit..."
    exit 1
fi


# List detected devices
echo; echo "    ~~ ~~ ~~ ~~ ~~ ~~"
echo "    Detected devices:"
echo; echo -n "    "; cat "$devices_name_list"
echo "    ~~ ~~ ~~ ~~ ~~ ~~"

echo; echo "    ~~ ~~ ~~ ~~ ~~ ~~"
echo "    Device vendors:"
echo; echo -n "    "; cat "$devices_vendor_list"
echo "    ~~ ~~ ~~ ~~ ~~ ~~"


# Check if the user wants to proceed
echo; echo "All detected devices will now be Mounted;"
read -p "Press enter to proceed..."


# Count number of devices
devices_count=$(wc -l < "$devices_info_list")

# Loop over all devices and mount them
i=1
while [ "$i" -le "$devices_count" ]
do

    device_vendor=$(sed "${i}q;d" "$devices_vendor_list")
    device_id=$(sed "${i}q;d" "$devices_id_list")
    device_name=$(sed "${i}q;d" "$devices_name_list")

    device_id_no_comma=${device_id//,}
    mount_dir_name="${device_vendor}${device_id_no_comma}"
    mount_dir="${top_level_mount_dir}/${mount_dir_name}"
    mkdir -p "$mount_dir"

    echo
    echo "    ~~ ~~ ~~ ~~ ~~ ~~"
    echo "    Mounting: $device_name"
    echo "    As:       $mount_dir_name"
    echo "    ~~ ~~ ~~ ~~ ~~ ~~"

    jmtpfs -device="$device_id" "$mount_dir" -o auto_unmount > /dev/null 2>&1

    ((i = i + 1))
done


# Do the cleaning
cleanup

# Prompt the exit
echo -e "\n    Done.\n"; read -p "Press enter to exit..."
exit 0
