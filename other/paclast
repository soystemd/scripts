#!/bin/sh

if [ "$1" = "less" ]; then
    unbuffer paclast | less
    exit 0
fi

# Print how many dates a given date is.
relative_date() {
    given_date="$1"
    echo $(( ($(date +%s) - $(date -d "$given_date" +%s)) / (86400) ))
}

# Get a list of all installed packages and their first install date.
all="$(awk '/installed/ {print $1" "$4}' /var/log/pacman.log | awk '!_[$2]++')"

pacman -Qqe | # List all packages that are explicitly installed.
    \
    while IFS= read -r explicit; do
        # Out of the list of all installed packages,
        # print only those that are explicitly installed.
        echo "$all" | awk -v ptrn="$explicit" '$2==ptrn {print $0}'
    done |
    \
    sort --reverse --stable --key=1,1 | # Sort the list by date.
    \
    awk '
        BEGIN{FS=OFS=""};
        {$1="";$12=" ";$18=$19=$20=$21=$22=$23=$24=$25=$26="";$27=" "; print $0}
        ' | # Beautify and format the list using awk.
    \
    while read -r line; do # Insert a relative date column in every line.
        pkg="$( echo "$line" | cut -d' ' -f3)"
        time="$(echo "$line" | cut -d' ' -f2)"
        date="$(echo "$line" | cut -d' ' -f1)"
        reladate="$(relative_date "$date")"
        echo "$date $time ($reladate days ago) $pkg"
    done |
    \
    while read -r line; do # Color the lines with alternating colors.
        echo -e "\e[1;32m$line"
        read -r line
        echo -e "\e[1;36m$line"
    done

# Revert terminal's text color back to normal.
echo -en "\e[0m"
